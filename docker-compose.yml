version: '3'
services:
  redis:
    image: redis:3.2.11-alpine
  db:
    image: postgres:9.6.10-alpine
    environment:
      - POSTGRES_DB=longbow
      - POSTGRES_USER=longbow
      - POSTGRES_PASSWORD=longbow
    volumes:
      - .:/app
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.webapp
    image: longbow_web
    command: python manage.py runserver 0.0.0.0:5721
    ports:
      - "5721:5721"
    depends_on:
      - db
    volumes:
      - .:/app
    env_file:
      - dev.env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  worker:
    image: longbow_web
    env_file:
      - dev.env
    depends_on:
      - db
    volumes:
      - .:/app
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: python manage.py worker
  postprocessor:
    image: longbow_web
    env_file:
      - dev.env
    depends_on:
      - db
    volumes:
      - .:/app
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: python manage.py postprocessor
  cluster:
    build:
      context: .
      dockerfile: Dockerfile.cluster
    volumes:
      - ~/.ssh:/root/.ssh
  ngrok:
    depends_on:
      - webapp
    build:
      context: .
      dockerfile: Dockerfile.ngrok
    command: ./entrypoint-ngrok.sh ${NGROK_TOKEN}

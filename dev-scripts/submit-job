#!/usr/bin/env python

import json
import os
import sys
import requests
import click

def post_job(job_script_filename, inputs_filename, username, password, ip, baseurl, longbowurl, token):
	with open(job_script_filename) as f:
		job_code = f.read()

	job_data = {
		"backend": "ghap"
	}

	with open(inputs_filename) as f:
		job_data["inputs"] = json.loads(f.read())

	job_data["code"] = job_code

	job_data["ghap_credentials"] = {
		"username": username,
		"password": password,
		"ip": ip,
	}

	if baseurl:
		job_data["base_url"] = baseurl

	endpoint = os.path.join(longbowurl, "submit_job_token/")
	response = requests.post(endpoint, data=json.dumps(job_data), headers = {
		"Authorization": token
	})

	print(response)
	print(response.text)


@click.command()
@click.argument("job_directory")
@click.option("--username")
@click.option("--password")
@click.option("--ip")
@click.option("--baseurl")
@click.option("--longbowurl", default="http://localhost:5721/")
@click.option("--token", default="admintoken")
def cli(job_directory, username, password, ip, baseurl, longbowurl, token):
	inputs_directory = os.path.join(job_directory, "inputs")
	inputs_filename = os.path.join(job_directory, "inputs.json")
	job_script_filename = os.path.join(job_directory, "code.Rmd")
	if os.path.exists(inputs_directory):
		for root, dirs, files in os.walk(inputs_directory):
			for filename in files:
				inputs_filename = os.path.join(root, filename)
				post_job(job_script_filename, inputs_filename, username, password, ip, baseurl, longbowurl, token)
	else:
		post_job(job_script_filename, inputs_filename, username, password, ip, baseurl, longbowurl, token)


if __name__ == "__main__":
	cli()